@import '_mixins';

$color-white: #fff;
$color-blue: #b2deff;
$color-green: #c8ffb2;
$color-red: #ffb2c7;
$color-orange: #ffcdb2;
$color-yellow: #eeffb2;

$color-background-light: #555;
$color-background: #444;
$color-background-dark: #333;
$color-background-darker: #111;
$color-text: #bbb;
$color-text-inverse: $color-background-darker;
$color-border: #777;
$color-highlight: #fff;
$color-link: $color-blue;
$font-family: 'Droid Sans Mono', monospace;

@font-face {
  font-family: 'Droid Sans Mono';
  src: url('../fonts/DroidSansMono-webfont.eot');
  src: url('../fonts/DroidSansMono-webfont.eot?#iefix')
      format('embedded-opentype'),
    url('../fonts/DroidSansMono-webfont.woff') format('woff'),
    url('../fonts/DroidSansMono-webfont.ttf') format('truetype'),
    url('../fonts/DroidSansMono-webfont.svg#DroidSansMono') format('svg');
  font-weight: normal;
  font-style: normal;
}

html,
body {
  height: 100%;
}
body {
  font-family: $font-family;
  font-size: 9/12 * 100%;
  line-height: 1.5;
  color: $color-text;
  background: $color-background;
  display: flex;
  flex-direction: column;
  margin: 0;
}

.alert-error {
  text-align: center;
  color: $color-text-inverse;
  background: $color-red;
  margin: 0;
  padding: 2em;
}
.error-unsupported {
  display: none;
}
.is-unsupported .error-unsupported {
  display: block;
}

p,
ul,
ol,
dl,
h1,
h2,
h3,
h4,
h5,
h6,
table {
  margin: 0.5em 0;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
  color: $color-highlight;
  text-transform: lowercase;
}

.sr-only {
  position: absolute;
  left: -10000px;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

a {
  color: $color-link;
  text-decoration: none;

  &:hover,
  &:active,
  &:focus {
    color: $color-highlight;
  }
}

button,
.label-file,
.introjs-button {
  padding: 0.5em 1em;
  border: 0;
  border-radius: 0.25em;
  font-family: $font-family;
  font-size: 100%;
  line-height: 1.5;
  color: $color-text;
  background: $color-background-dark;
  box-shadow: 0 0 0.1em $color-background-darker;
  white-space: nowrap;
  cursor: pointer;

  &:hover,
  &:active,
  &:focus {
    color: $color-highlight;
    background: $color-background-darker;
  }
}
.button-secondary {
  background: transparent;
  box-shadow: 0;
}

.input-file {
  width: 0.1px;
  height: 0.1px;
  opacity: 0;
  overflow: hidden;
}
.input-number {
  line-height: 2;
  width: 3em;
}

.success {
  color: $color-green;
}
.error {
  color: $color-red;
}

.header,
.main,
.footer {
  padding: 1em 2em;
}
.header {
  @extend %clearfix !optional;

  display: flex;
  text-transform: lowercase;
  white-space: nowrap;

  h1 {
    margin: 0;
    letter-spacing: 0.25em;
  }
}
.header-section {
  flex-grow: 2;
  flex-basis: 0;
}
.header-main {
  flex-grow: 1;
  text-align: center;
}
.header-user {
  text-align: right;
}
@media screen and (max-width: 639px) {
  .header {
    display: block;
  }
  .header-section {
    float: left;
  }
  .header-left {
    padding-right: 1.5em;
  }
  .header-user {
    float: right;
  }
}
@media screen and (max-width: 479px) {
  .header-main {
    float: right;
  }
  .header-user {
    float: left;
    clear: both;
    padding-top: 0.5em;
  }
}

.main {
  flex-grow: 1;
}
@media screen and (min-width: 800px) {
  .sections {
    display: flex;
  }
  .section-composition {
    flex-grow: 1;
  }
}
@media screen and (min-width: 1440px) {
  .section-input {
    width: 40%;
  }
}
@media screen and (min-width: 1024px) and (max-width: 1439px) {
  .section-input {
    width: 30%;
  }
}
@media screen and (min-width: 1024px) {
  .section-composition {
    padding-right: 2em;
  }
  .section-storage {
    width: 28em;
  }
}
@media screen and (min-width: 800px) {
  .section-composition {
    padding-left: 2em;
    box-sizing: border-box;
  }
}
@media screen and (min-width: 800px) and (max-width: 1023px) {
  .sections {
    flex-wrap: wrap;
  }
  .section-input {
    width: 40%;
  }
  .section-composition {
    width: 60%;
    padding-right: 0;
  }
}
@media screen and (max-width: 1023px) {
  .section-storage {
    width: 100%;
    padding-top: 1em;
  }
}
@media screen and (max-width: 799px) {
  .section-composition {
    padding-top: 1em;
  }
}

.composition-container {
  position: relative;
  padding: 1em;
  margin-bottom: 1em;
  border-radius: 0.25em;
  box-sizing: border-box;
  background: $color-background-dark;
  box-shadow: 0 0 0.25em $color-background-darker;
}
.composition-inner {
  position: relative;

  canvas {
    width: 100%;
  }
}
.composition-overlay {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;

  .mode-final & {
    visibility: hidden;
  }
}
.row {
  display: flex;
}
.tile {
  flex-grow: 1;
  position: relative;

  &:before {
    content: '';
    display: block;
    padding-bottom: 100%;
  }
}
.tile-inner {
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  box-sizing: border-box;
  text-align: center;
  border: 0.5em solid transparent;
}
.tile-text {
  position: absolute;
  width: 2em;
  height: 2em;
  left: 50%;
  top: 50%;
  margin-top: -1em;
  margin-left: -1em;
  line-height: 2em;
  text-align: center;
  color: $color-highlight;
  background: $color-background-darker;
  border-radius: 100%;
}
.composition-controls {
  display: flex;
  justify-content: space-between;
  margin-bottom: 1em;

  p {
    margin: 0;
  }
}
.composition-shuffle {
  width: 33.33%;

  button {
    margin-right: 0.5em;
  }
}
.composition-settings {
  width: 33.33%;
}

.images {
  @extend %clearfix;
  margin-top: -0.5em;
  margin-left: -1em;
  margin-right: -1em;
}
.image {
  width: 33.33%;
  float: left;
  padding: 1em;
  box-sizing: border-box;
}
@media screen and (max-width: 1439px) {
  .image {
    width: 50%;
  }
}
.image-inner {
  position: relative;
  border: 1px solid $color-border;
  padding: 3em;
  padding-bottom: 1.5em;

  .tile {
    background-color: $color-white;
    background-position: center;
    background-size: contain;
    background-repeat: no-repeat;
    box-shadow: 0 0 0.5em $color-background-dark;
  }
}
.mode-final .image-inner .tile-inner {
  visibility: hidden;
}
.image-controls {
  margin-top: 3em;
  margin-left: -3em;
  margin-right: -3em;
  text-align: center;
}
.image-delete {
  position: absolute;
  top: 0;
  right: 0;
  background: transparent;
  box-shadow: none;
}
.image-inner-add {
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;

  &:before {
    content: '';
    display: block;
    padding-bottom: 100%;
  }
}

.conn-button {
  position: absolute;
  padding: 0;
  width: 2em;
  height: 2em;
  line-height: 2;
  color: $color-text-inverse;
  background: $color-white;
  box-shadow: 0 0 0.25em $color-background-dark;

  &:hover,
  &:active,
  &:focus {
    color: $color-text-inverse;
    box-shadow: 0 0 0.25em $color-background-darker;
  }
}
.conn-button-0,
.conn-button-2 {
  top: 50%;
  margin-top: -1em;
}
.conn-button-0 {
  left: -2em;
}
.conn-button-2 {
  right: -2em;
}
.conn-button-1,
.conn-button-3 {
  left: 50%;
  margin-left: -1em;
}
.conn-button-1 {
  top: -2em;
}
.conn-button-3 {
  bottom: -2em;
}

.storage-header {
  display: flex;
  flex-direction: columns;
}
.section-heading {
  flex-grow: 1;
  margin: 0;
  padding: 0.5em 0;
}
.storage-empty {
  border-top: 1px solid $color-border;
  padding: 0.5em 0;
  font-style: italic;
}
.storage-status {
  font-style: italic;
}
.storage-list {
  min-height: 1em;
  width: 100%;
  border-collapse: collapse;
  margin-bottom: 1em;

  td {
    border-top: 1px solid $color-border;
    padding-left: 0.5em;

    &:first-child {
      width: 100%;
      padding-left: 0;
    }
  }
  button {
    margin: 0.1em 0;
  }
}

.footer {
  text-align: right;

  p {
    margin: 0;
  }
}

$sides: (
  0: 'left',
  1: 'top',
  2: 'right',
  3: 'bottom'
);
$connections: (
  1: $color-red,
  2: $color-green,
  3: $color-blue,
  4: $color-orange,
  5: $color-yellow
);
@each $i, $side in $sides {
  @each $j, $color in $connections {
    .conn-#{$i}-#{$j} {
      border-#{$side}-color: $color;
    }
  }
}
@each $i, $color in $connections {
  .conn-#{$i} {
    background: $color;

    &:hover,
    &:active,
    &:focus {
      background: $color;
    }
  }
}

$rotations: (
  1: -0.25turn,
  2: -0.5turn,
  3: -0.75turn
);
@each $i, $rotation in $rotations {
  .rot-#{$i} {
    transform: rotate($rotation);

    .tile-text {
      transform: rotate(-$rotation);
    }
  }
}

.introjs-helperLayer {
  background: $color-background;
  opacity: 1;
}
.introjs-tooltip {
  color: $color-highlight;
  background: $color-background;
}
.introjs-arrow {
  &.top,
  &.top-right,
  &.top-middle {
    border-bottom-color: $color-background-light;
  }
  &.right,
  &.right-bottom {
    border-left-color: $color-background-light;
  }
  &.bottom,
  &.bottom-right,
  &.bottom-middle {
    border-top-color: $color-background-light;
  }
  &.left,
  &.left-bottom {
    border-right-color: $color-background-light;
  }
}
.introjs-button {
  text-shadow: none;

  &:hover {
    box-shadow: 0 0 0.1em $color-background-darker;
  }
}
.introjs-skipbutton,
.introjs-prevbutton {
  margin-right: 0.5em;
}
.introjs-progress {
  background-color: $color-border;
}
.introjs-progressbar {
  background-color: $color-blue;
}
