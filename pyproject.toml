[tool.poetry]
name = "tessellation"
version = "0.8.3"
description = "A web app to arrange tiles according to specified rules."
authors = ["Jakub Valenta <jakub@jakubvalenta.cz>"]
license = "GPL-3.0-or-later"
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Django :: 5.0",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Artistic Software",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[tool.poetry.dependencies]
cairosvg = "^2.7.1"
django = "^5.1.12"
django-cleanup = "^9.0.0"
django-debug-toolbar = "^5.0.1"
django-unused-media = "^0.2.2"
django-webpack-loader = "^3.1.1"
djangorestframework = "^3.16.0"
drf-base64 = "^2.0"
pillow = "^11.2.1"
psycopg2 = "^2.9.10"
python = "^3.10"

[tool.poetry.group.dev.dependencies]
coverage = "^7.10.7"
ruff = "^0.13.2"
pytest-django = "^4.11.1"
mypy = "^1.18.2"
django-stubs = {version = "^5.2.5", extras = ["compatible-mypy"]}
djangorestframework-stubs = {extras = ["compatible-mypy"], version = "^3.16.0"}

[tool.coverage.report]
exclude_lines = [
    "def __repr__",
    "def __str__"
]

[tool.coverage.run]
omit = [
    "*/apps.py",
    "*/conf/*",
    "*/migrations/*",
    "*/tests/*",
    "manage.py",
    "setup.py"
]

[tool.mypy]
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]

[[tool.mypy.overrides]]
module = ["cairosvg", "drf_base64.fields"]
ignore_missing_imports = true

[tool.django-stubs]
django_settings_module = "conf.settings_test"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "conf.settings_test"

[tool.ruff]
extend-exclude = ["migrations"]
line-length = 100

[tool.ruff.lint]
select = ["C90", "D", "DJ", "E", "F", "I", "N", "PT"]
ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", "D203", "D211", "D212", "PT009"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
